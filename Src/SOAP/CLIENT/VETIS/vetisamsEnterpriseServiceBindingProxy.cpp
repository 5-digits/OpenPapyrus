/* vetisamsEnterpriseServiceBindingProxy.cpp
   Generated by gSOAP 2.8.8 from vetisams.h

Copyright(C) 2000-2012, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#include "vetisamsEnterpriseServiceBindingProxy.h"

EnterpriseServiceBindingProxy::EnterpriseServiceBindingProxy()
{
	EnterpriseServiceBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

EnterpriseServiceBindingProxy::EnterpriseServiceBindingProxy(const struct soap &_soap) : soap(_soap)
{ }

EnterpriseServiceBindingProxy::EnterpriseServiceBindingProxy(const char *url)
{
	EnterpriseServiceBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = url;
}

EnterpriseServiceBindingProxy::EnterpriseServiceBindingProxy(soap_mode iomode)
{
	EnterpriseServiceBindingProxy_init(iomode, iomode);
}

EnterpriseServiceBindingProxy::EnterpriseServiceBindingProxy(const char *url, soap_mode iomode)
{
	EnterpriseServiceBindingProxy_init(iomode, iomode);
	soap_endpoint = url;
}

EnterpriseServiceBindingProxy::EnterpriseServiceBindingProxy(soap_mode imode, soap_mode omode)
{
	EnterpriseServiceBindingProxy_init(imode, omode);
}

EnterpriseServiceBindingProxy::~EnterpriseServiceBindingProxy()
{ }

void EnterpriseServiceBindingProxy::EnterpriseServiceBindingProxy_init(soap_mode imode, soap_mode omode)
{
	soap_imode(this, imode);
	soap_omode(this, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL},
	{"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"app", "http://api.vetrf.ru/schema/cdm/application", NULL, NULL},
	{"base", "http://api.vetrf.ru/schema/cdm/base", NULL, NULL},
	{"ent", "http://api.vetrf.ru/schema/cdm/dictionary/v2", NULL, NULL},
	{"vd", "http://api.vetrf.ru/schema/cdm/mercury/vet-document/v2", NULL, NULL},
	{"ns1", "http://api.vetrf.ru/schema/cdm/registry/enterprise/service/v2", NULL, NULL},
	{"ns2", "http://api.vetrf.ru/schema/cdm/base/ws-definitions", NULL, NULL},
	{"ns8", "http://api.vetrf.ru/schema/cdm/registry/ws-definitions/v2", NULL, NULL},
	{"ns3", "http://api.vetrf.ru/schema/cdm/application/service", NULL, NULL},
	{"ws", "http://api.vetrf.ru/schema/cdm/application/ws-definitions", NULL, NULL},
	{"ns4", "http://api.vetrf.ru/schema/cdm/mercury/g2b/service/v2", NULL, NULL},
	{"merc", "http://api.vetrf.ru/schema/cdm/mercury/g2b/applications/v2", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this, namespaces);
}

void EnterpriseServiceBindingProxy::destroy()
{
	soap_destroy(this);
	soap_end(this);
}

void EnterpriseServiceBindingProxy::reset()
{
	destroy();
	soap_done(this);
	soap_init(this);
	EnterpriseServiceBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void EnterpriseServiceBindingProxy::soap_noheader()
{
	this->header = NULL;
}

const SOAP_ENV__Header *EnterpriseServiceBindingProxy::soap_header()
{
	return this->header;
}

const SOAP_ENV__Fault *EnterpriseServiceBindingProxy::soap_fault()
{
	return this->fault;
}

const char *EnterpriseServiceBindingProxy::soap_fault_string()
{
	return *soap_faultstring(this);
}

const char *EnterpriseServiceBindingProxy::soap_fault_detail()
{
	return *soap_faultdetail(this);
}

int EnterpriseServiceBindingProxy::soap_close_socket()
{
	return soap_closesock(this);
}

int EnterpriseServiceBindingProxy::soap_force_close_socket()
{
	return soap_force_closesock(this);
}

void EnterpriseServiceBindingProxy::soap_print_fault(FILE *fd)
{
	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void EnterpriseServiceBindingProxy::soap_stream_fault(std::ostream& os)
{
	::soap_stream_fault(this, os);
}
#endif

char *EnterpriseServiceBindingProxy::soap_sprint_fault(char *buf, size_t len)
{
	return ::soap_sprint_fault(this, buf, len);
}
#endif

int EnterpriseServiceBindingProxy::GetBusinessEntityByGuid(const char *endpoint, const char *soap_action, _ns8__getBusinessEntityByGuidRequest *ns8__getBusinessEntityByGuidRequest, _ns8__getBusinessEntityByGuidResponse *ns8__getBusinessEntityByGuidResponse)
{
	struct soap *soap = this;
	struct __ns1__GetBusinessEntityByGuid soap_tmp___ns1__GetBusinessEntityByGuid;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_endpoint, "https://api2.vetrf.ru:8002/platform/services/2.0/EnterpriseService");
	SETIFZ(soap_action, "GetBusinessEntityByGuid");
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetBusinessEntityByGuid.ns8__getBusinessEntityByGuidRequest = ns8__getBusinessEntityByGuidRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__GetBusinessEntityByGuid(soap, &soap_tmp___ns1__GetBusinessEntityByGuid);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetBusinessEntityByGuid(soap, &soap_tmp___ns1__GetBusinessEntityByGuid, "-ns1:GetBusinessEntityByGuid", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetBusinessEntityByGuid(soap, &soap_tmp___ns1__GetBusinessEntityByGuid, "-ns1:GetBusinessEntityByGuid", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!ns8__getBusinessEntityByGuidResponse)
		return soap_closesock(soap);
	ns8__getBusinessEntityByGuidResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__getBusinessEntityByGuidResponse->soap_get(soap, "ns8:getBusinessEntityByGuidResponse", "");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int EnterpriseServiceBindingProxy::GetBusinessEntityByUuid(const char *endpoint, const char *soap_action, _ns8__getBusinessEntityByUuidRequest *ns8__getBusinessEntityByUuidRequest, _ns8__getBusinessEntityByUuidResponse *ns8__getBusinessEntityByUuidResponse)
{
	struct soap *soap = this;
	struct __ns1__GetBusinessEntityByUuid soap_tmp___ns1__GetBusinessEntityByUuid;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_endpoint, "https://api2.vetrf.ru:8002/platform/services/2.0/EnterpriseService");
	SETIFZ(soap_action, "GetBusinessEntityByUuid");
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetBusinessEntityByUuid.ns8__getBusinessEntityByUuidRequest = ns8__getBusinessEntityByUuidRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__GetBusinessEntityByUuid(soap, &soap_tmp___ns1__GetBusinessEntityByUuid);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetBusinessEntityByUuid(soap, &soap_tmp___ns1__GetBusinessEntityByUuid, "-ns1:GetBusinessEntityByUuid", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetBusinessEntityByUuid(soap, &soap_tmp___ns1__GetBusinessEntityByUuid, "-ns1:GetBusinessEntityByUuid", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!ns8__getBusinessEntityByUuidResponse)
		return soap_closesock(soap);
	ns8__getBusinessEntityByUuidResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__getBusinessEntityByUuidResponse->soap_get(soap, "ns8:getBusinessEntityByUuidResponse", "");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int EnterpriseServiceBindingProxy::GetBusinessEntityList(const char *endpoint, const char *soap_action, _ns8__getBusinessEntityListRequest *ns8__getBusinessEntityListRequest, _ns8__getBusinessEntityListResponse *ns8__getBusinessEntityListResponse)
{
	struct soap *soap = this;
	struct __ns1__GetBusinessEntityList soap_tmp___ns1__GetBusinessEntityList;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_endpoint, "https://api2.vetrf.ru:8002/platform/services/2.0/EnterpriseService");
	SETIFZ(soap_action, "GetBusinessEntityList");
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetBusinessEntityList.ns8__getBusinessEntityListRequest = ns8__getBusinessEntityListRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__GetBusinessEntityList(soap, &soap_tmp___ns1__GetBusinessEntityList);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetBusinessEntityList(soap, &soap_tmp___ns1__GetBusinessEntityList, "-ns1:GetBusinessEntityList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetBusinessEntityList(soap, &soap_tmp___ns1__GetBusinessEntityList, "-ns1:GetBusinessEntityList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!ns8__getBusinessEntityListResponse)
		return soap_closesock(soap);
	ns8__getBusinessEntityListResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__getBusinessEntityListResponse->soap_get(soap, "ns8:getBusinessEntityListResponse", "");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int EnterpriseServiceBindingProxy::GetBusinessEntityChangesList(const char *endpoint, const char *soap_action, _ns8__getBusinessEntityChangesListRequest *ns8__getBusinessEntityChangesListRequest, _ns8__getBusinessEntityChangesListResponse *ns8__getBusinessEntityChangesListResponse)
{
	struct soap *soap = this;
	struct __ns1__GetBusinessEntityChangesList soap_tmp___ns1__GetBusinessEntityChangesList;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_endpoint, "https://api2.vetrf.ru:8002/platform/services/2.0/EnterpriseService");
	SETIFZ(soap_action, "GetBusinessEntityChangesList");
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetBusinessEntityChangesList.ns8__getBusinessEntityChangesListRequest = ns8__getBusinessEntityChangesListRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__GetBusinessEntityChangesList(soap, &soap_tmp___ns1__GetBusinessEntityChangesList);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetBusinessEntityChangesList(soap, &soap_tmp___ns1__GetBusinessEntityChangesList, "-ns1:GetBusinessEntityChangesList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetBusinessEntityChangesList(soap, &soap_tmp___ns1__GetBusinessEntityChangesList, "-ns1:GetBusinessEntityChangesList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!ns8__getBusinessEntityChangesListResponse)
		return soap_closesock(soap);
	ns8__getBusinessEntityChangesListResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__getBusinessEntityChangesListResponse->soap_get(soap, "ns8:getBusinessEntityChangesListResponse", "");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int EnterpriseServiceBindingProxy::GetEnterpriseByGuid(const char *endpoint, const char *soap_action, _ns8__getEnterpriseByGuidRequest *ns8__getEnterpriseByGuidRequest, _ns8__getEnterpriseByGuidResponse *ns8__getEnterpriseByGuidResponse)
{
	struct soap *soap = this;
	struct __ns1__GetEnterpriseByGuid soap_tmp___ns1__GetEnterpriseByGuid;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_endpoint, "https://api2.vetrf.ru:8002/platform/services/2.0/EnterpriseService");
	SETIFZ(soap_action, "GetEnterpriseByGuid");
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetEnterpriseByGuid.ns8__getEnterpriseByGuidRequest = ns8__getEnterpriseByGuidRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__GetEnterpriseByGuid(soap, &soap_tmp___ns1__GetEnterpriseByGuid);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetEnterpriseByGuid(soap, &soap_tmp___ns1__GetEnterpriseByGuid, "-ns1:GetEnterpriseByGuid", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetEnterpriseByGuid(soap, &soap_tmp___ns1__GetEnterpriseByGuid, "-ns1:GetEnterpriseByGuid", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!ns8__getEnterpriseByGuidResponse)
		return soap_closesock(soap);
	ns8__getEnterpriseByGuidResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__getEnterpriseByGuidResponse->soap_get(soap, "ns8:getEnterpriseByGuidResponse", "");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int EnterpriseServiceBindingProxy::GetEnterpriseByUuid(const char *endpoint, const char *soap_action, _ns8__getEnterpriseByUuidRequest *ns8__getEnterpriseByUuidRequest, _ns8__getEnterpriseByUuidResponse *ns8__getEnterpriseByUuidResponse)
{
	struct soap *soap = this;
	struct __ns1__GetEnterpriseByUuid soap_tmp___ns1__GetEnterpriseByUuid;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_endpoint, "https://api2.vetrf.ru:8002/platform/services/2.0/EnterpriseService");
	SETIFZ(soap_action, "GetEnterpriseByUuid");
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetEnterpriseByUuid.ns8__getEnterpriseByUuidRequest = ns8__getEnterpriseByUuidRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__GetEnterpriseByUuid(soap, &soap_tmp___ns1__GetEnterpriseByUuid);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetEnterpriseByUuid(soap, &soap_tmp___ns1__GetEnterpriseByUuid, "-ns1:GetEnterpriseByUuid", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetEnterpriseByUuid(soap, &soap_tmp___ns1__GetEnterpriseByUuid, "-ns1:GetEnterpriseByUuid", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!ns8__getEnterpriseByUuidResponse)
		return soap_closesock(soap);
	ns8__getEnterpriseByUuidResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__getEnterpriseByUuidResponse->soap_get(soap, "ns8:getEnterpriseByUuidResponse", "");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int EnterpriseServiceBindingProxy::GetForeignEnterpriseList(const char *endpoint, const char *soap_action, _ns8__getForeignEnterpriseListRequest *ns8__getForeignEnterpriseListRequest, _ns8__getForeignEnterpriseListResponse *ns8__getForeignEnterpriseListResponse)
{
	struct soap *soap = this;
	struct __ns1__GetForeignEnterpriseList soap_tmp___ns1__GetForeignEnterpriseList;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_endpoint, "https://api2.vetrf.ru:8002/platform/services/2.0/EnterpriseService");
	SETIFZ(soap_action, "GetForeignEnterpriseList");
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetForeignEnterpriseList.ns8__getForeignEnterpriseListRequest = ns8__getForeignEnterpriseListRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__GetForeignEnterpriseList(soap, &soap_tmp___ns1__GetForeignEnterpriseList);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetForeignEnterpriseList(soap, &soap_tmp___ns1__GetForeignEnterpriseList, "-ns1:GetForeignEnterpriseList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetForeignEnterpriseList(soap, &soap_tmp___ns1__GetForeignEnterpriseList, "-ns1:GetForeignEnterpriseList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!ns8__getForeignEnterpriseListResponse)
		return soap_closesock(soap);
	ns8__getForeignEnterpriseListResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__getForeignEnterpriseListResponse->soap_get(soap, "ns8:getForeignEnterpriseListResponse", "");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int EnterpriseServiceBindingProxy::GetRussianEnterpriseList(const char *endpoint, const char *soap_action, _ns8__getRussianEnterpriseListRequest *ns8__getRussianEnterpriseListRequest, _ns8__getRussianEnterpriseListResponse *ns8__getRussianEnterpriseListResponse)
{
	struct soap *soap = this;
	struct __ns1__GetRussianEnterpriseList soap_tmp___ns1__GetRussianEnterpriseList;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_endpoint, "https://api2.vetrf.ru:8002/platform/services/2.0/EnterpriseService");
	SETIFZ(soap_action, "GetRussianEnterpriseList");
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetRussianEnterpriseList.ns8__getRussianEnterpriseListRequest = ns8__getRussianEnterpriseListRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__GetRussianEnterpriseList(soap, &soap_tmp___ns1__GetRussianEnterpriseList);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetRussianEnterpriseList(soap, &soap_tmp___ns1__GetRussianEnterpriseList, "-ns1:GetRussianEnterpriseList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetRussianEnterpriseList(soap, &soap_tmp___ns1__GetRussianEnterpriseList, "-ns1:GetRussianEnterpriseList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!ns8__getRussianEnterpriseListResponse)
		return soap_closesock(soap);
	ns8__getRussianEnterpriseListResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__getRussianEnterpriseListResponse->soap_get(soap, "ns8:getRussianEnterpriseListResponse", "");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int EnterpriseServiceBindingProxy::GetForeignEnterpriseChangesList(const char *endpoint, const char *soap_action, _ns8__getForeignEnterpriseChangesListRequest *ns8__getForeignEnterpriseChangesListRequest, _ns8__getForeignEnterpriseChangesListResponse *ns8__getForeignEnterpriseChangesListResponse)
{
	struct soap *soap = this;
	struct __ns1__GetForeignEnterpriseChangesList soap_tmp___ns1__GetForeignEnterpriseChangesList;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_endpoint, "https://api2.vetrf.ru:8002/platform/services/2.0/EnterpriseService");
	SETIFZ(soap_action, "GetForeignEnterpriseChangesList");
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetForeignEnterpriseChangesList.ns8__getForeignEnterpriseChangesListRequest = ns8__getForeignEnterpriseChangesListRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__GetForeignEnterpriseChangesList(soap, &soap_tmp___ns1__GetForeignEnterpriseChangesList);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetForeignEnterpriseChangesList(soap, &soap_tmp___ns1__GetForeignEnterpriseChangesList, "-ns1:GetForeignEnterpriseChangesList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetForeignEnterpriseChangesList(soap, &soap_tmp___ns1__GetForeignEnterpriseChangesList, "-ns1:GetForeignEnterpriseChangesList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!ns8__getForeignEnterpriseChangesListResponse)
		return soap_closesock(soap);
	ns8__getForeignEnterpriseChangesListResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__getForeignEnterpriseChangesListResponse->soap_get(soap, "ns8:getForeignEnterpriseChangesListResponse", "");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int EnterpriseServiceBindingProxy::GetRussianEnterpriseChangesList(const char *endpoint, const char *soap_action, _ns8__getRussianEnterpriseChangesListRequest *ns8__getRussianEnterpriseChangesListRequest, _ns8__getRussianEnterpriseChangesListResponse *ns8__getRussianEnterpriseChangesListResponse)
{
	struct soap *soap = this;
	struct __ns1__GetRussianEnterpriseChangesList soap_tmp___ns1__GetRussianEnterpriseChangesList;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_endpoint, "https://api2.vetrf.ru:8002/platform/services/2.0/EnterpriseService");
	SETIFZ(soap_action, "GetRussianEnterpriseChangesList");
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetRussianEnterpriseChangesList.ns8__getRussianEnterpriseChangesListRequest = ns8__getRussianEnterpriseChangesListRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__GetRussianEnterpriseChangesList(soap, &soap_tmp___ns1__GetRussianEnterpriseChangesList);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetRussianEnterpriseChangesList(soap, &soap_tmp___ns1__GetRussianEnterpriseChangesList, "-ns1:GetRussianEnterpriseChangesList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetRussianEnterpriseChangesList(soap, &soap_tmp___ns1__GetRussianEnterpriseChangesList, "-ns1:GetRussianEnterpriseChangesList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!ns8__getRussianEnterpriseChangesListResponse)
		return soap_closesock(soap);
	ns8__getRussianEnterpriseChangesListResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__getRussianEnterpriseChangesListResponse->soap_get(soap, "ns8:getRussianEnterpriseChangesListResponse", "");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int EnterpriseServiceBindingProxy::GetBusinessMemberByGLN(const char *endpoint, const char *soap_action, _ns8__getBusinessMemberByGLNRequest *ns8__getBusinessMemberByGLNRequest, _ns8__getBusinessMemberByGLNResponse *ns8__getBusinessMemberByGLNResponse)
{
	struct soap *soap = this;
	struct __ns1__GetBusinessMemberByGLN soap_tmp___ns1__GetBusinessMemberByGLN;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_endpoint, "https://api2.vetrf.ru:8002/platform/services/2.0/EnterpriseService");
	SETIFZ(soap_action, "GetBusinessMemberByGLN");
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetBusinessMemberByGLN.ns8__getBusinessMemberByGLNRequest = ns8__getBusinessMemberByGLNRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__GetBusinessMemberByGLN(soap, &soap_tmp___ns1__GetBusinessMemberByGLN);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetBusinessMemberByGLN(soap, &soap_tmp___ns1__GetBusinessMemberByGLN, "-ns1:GetBusinessMemberByGLN", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetBusinessMemberByGLN(soap, &soap_tmp___ns1__GetBusinessMemberByGLN, "-ns1:GetBusinessMemberByGLN", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!ns8__getBusinessMemberByGLNResponse)
		return soap_closesock(soap);
	ns8__getBusinessMemberByGLNResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__getBusinessMemberByGLNResponse->soap_get(soap, "ns8:getBusinessMemberByGLNResponse", "");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int EnterpriseServiceBindingProxy::GetActivityLocationList(const char *endpoint, const char *soap_action, _ns8__getActivityLocationListRequest *ns8__getActivityLocationListRequest, _ns8__getActivityLocationListResponse *ns8__getActivityLocationListResponse)
{
	struct soap *soap = this;
	struct __ns1__GetActivityLocationList soap_tmp___ns1__GetActivityLocationList;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_endpoint, "https://api2.vetrf.ru:8002/platform/services/2.0/EnterpriseService");
	SETIFZ(soap_action, "GetActivityLocationList");
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetActivityLocationList.ns8__getActivityLocationListRequest = ns8__getActivityLocationListRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__GetActivityLocationList(soap, &soap_tmp___ns1__GetActivityLocationList);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetActivityLocationList(soap, &soap_tmp___ns1__GetActivityLocationList, "-ns1:GetActivityLocationList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetActivityLocationList(soap, &soap_tmp___ns1__GetActivityLocationList, "-ns1:GetActivityLocationList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!ns8__getActivityLocationListResponse)
		return soap_closesock(soap);
	ns8__getActivityLocationListResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__getActivityLocationListResponse->soap_get(soap, "ns8:getActivityLocationListResponse", "");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
