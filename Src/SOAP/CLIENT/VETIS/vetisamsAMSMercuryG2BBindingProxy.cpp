/* vetisamsAMSMercuryG2BBindingProxy.cpp
   Generated by gSOAP 2.8.8 from vetisams.h

Copyright(C) 2000-2012, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#include "vetisamsAMSMercuryG2BBindingProxy.h"

AMSMercuryG2BBindingProxy::AMSMercuryG2BBindingProxy()
{
	AMSMercuryG2BBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

AMSMercuryG2BBindingProxy::AMSMercuryG2BBindingProxy(const struct soap &_soap) : soap(_soap)
{ }

AMSMercuryG2BBindingProxy::AMSMercuryG2BBindingProxy(const char *url)
{
	AMSMercuryG2BBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = url;
}

AMSMercuryG2BBindingProxy::AMSMercuryG2BBindingProxy(soap_mode iomode)
{
	AMSMercuryG2BBindingProxy_init(iomode, iomode);
}

AMSMercuryG2BBindingProxy::AMSMercuryG2BBindingProxy(const char *url, soap_mode iomode)
{
	AMSMercuryG2BBindingProxy_init(iomode, iomode);
	soap_endpoint = url;
}

AMSMercuryG2BBindingProxy::AMSMercuryG2BBindingProxy(soap_mode imode, soap_mode omode)
{
	AMSMercuryG2BBindingProxy_init(imode, omode);
}

AMSMercuryG2BBindingProxy::~AMSMercuryG2BBindingProxy()
{ }

void AMSMercuryG2BBindingProxy::AMSMercuryG2BBindingProxy_init(soap_mode imode, soap_mode omode)
{
	soap_imode(this, imode);
	soap_omode(this, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL},
	{"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"app", "http://api.vetrf.ru/schema/cdm/application", NULL, NULL},
	{"base", "http://api.vetrf.ru/schema/cdm/base", NULL, NULL},
	{"ent", "http://api.vetrf.ru/schema/cdm/dictionary/v2", NULL, NULL},
	{"vd", "http://api.vetrf.ru/schema/cdm/mercury/vet-document/v2", NULL, NULL},
	{"ns1", "http://api.vetrf.ru/schema/cdm/registry/enterprise/service/v2", NULL, NULL},
	{"ns2", "http://api.vetrf.ru/schema/cdm/base/ws-definitions", NULL, NULL},
	{"ns8", "http://api.vetrf.ru/schema/cdm/registry/ws-definitions/v2", NULL, NULL},
	{"ns3", "http://api.vetrf.ru/schema/cdm/application/service", NULL, NULL},
	{"ws", "http://api.vetrf.ru/schema/cdm/application/ws-definitions", NULL, NULL},
	{"ns4", "http://api.vetrf.ru/schema/cdm/mercury/g2b/service/v2", NULL, NULL},
	{"merc", "http://api.vetrf.ru/schema/cdm/mercury/g2b/applications/v2", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this, namespaces);
}

void AMSMercuryG2BBindingProxy::destroy()
{
	soap_destroy(this);
	soap_end(this);
}

void AMSMercuryG2BBindingProxy::reset()
{
	destroy();
	soap_done(this);
	soap_init(this);
	AMSMercuryG2BBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void AMSMercuryG2BBindingProxy::soap_noheader()
{
	this->header = NULL;
}

const SOAP_ENV__Header *AMSMercuryG2BBindingProxy::soap_header()
{
	return this->header;
}

const SOAP_ENV__Fault *AMSMercuryG2BBindingProxy::soap_fault()
{
	return this->fault;
}

const char *AMSMercuryG2BBindingProxy::soap_fault_string()
{
	return *soap_faultstring(this);
}

const char *AMSMercuryG2BBindingProxy::soap_fault_detail()
{
	return *soap_faultdetail(this);
}

int AMSMercuryG2BBindingProxy::soap_close_socket()
{
	return soap_closesock(this);
}

int AMSMercuryG2BBindingProxy::soap_force_close_socket()
{
	return soap_force_closesock(this);
}

void AMSMercuryG2BBindingProxy::soap_print_fault(FILE *fd)
{
	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void AMSMercuryG2BBindingProxy::soap_stream_fault(std::ostream& os)
{
	::soap_stream_fault(this, os);
}
#endif

char *AMSMercuryG2BBindingProxy::soap_sprint_fault(char *buf, size_t len)
{
	return ::soap_sprint_fault(this, buf, len);
}
#endif

int AMSMercuryG2BBindingProxy::processIncomingConsignmentRequest(const char *endpoint, const char *soap_action, merc__ProcessIncomingConsignmentRequest *merc__processIncomingConsignmentRequest, merc__ProcessIncomingConsignmentResponse *merc__processIncomingConsignmentResponse)
{
	struct soap *soap = this;
	struct __ns4__processIncomingConsignmentRequest soap_tmp___ns4__processIncomingConsignmentRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "processIncomingConsignmentRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns4__processIncomingConsignmentRequest.merc__processIncomingConsignmentRequest = merc__processIncomingConsignmentRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__processIncomingConsignmentRequest(soap, &soap_tmp___ns4__processIncomingConsignmentRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__processIncomingConsignmentRequest(soap, &soap_tmp___ns4__processIncomingConsignmentRequest, "-ns4:processIncomingConsignmentRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__processIncomingConsignmentRequest(soap, &soap_tmp___ns4__processIncomingConsignmentRequest, "-ns4:processIncomingConsignmentRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!merc__processIncomingConsignmentResponse)
		return soap_closesock(soap);
	merc__processIncomingConsignmentResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	merc__processIncomingConsignmentResponse->soap_get(soap, "merc:processIncomingConsignmentResponse", "merc:ProcessIncomingConsignmentResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::prepareOutgoingConsignmentRequest(const char *endpoint, const char *soap_action, merc__PrepareOutgoingConsignmentRequest *merc__prepareOutgoingConsignmentRequest, merc__PrepareOutgoingConsignmentResponse *merc__prepareOutgoingConsignmentResponse)
{
	struct soap *soap = this;
	struct __ns4__prepareOutgoingConsignmentRequest soap_tmp___ns4__prepareOutgoingConsignmentRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "prepareOutgoingConsignmentRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns4__prepareOutgoingConsignmentRequest.merc__prepareOutgoingConsignmentRequest = merc__prepareOutgoingConsignmentRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__prepareOutgoingConsignmentRequest(soap, &soap_tmp___ns4__prepareOutgoingConsignmentRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__prepareOutgoingConsignmentRequest(soap, &soap_tmp___ns4__prepareOutgoingConsignmentRequest, "-ns4:prepareOutgoingConsignmentRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__prepareOutgoingConsignmentRequest(soap, &soap_tmp___ns4__prepareOutgoingConsignmentRequest, "-ns4:prepareOutgoingConsignmentRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!merc__prepareOutgoingConsignmentResponse)
		return soap_closesock(soap);
	merc__prepareOutgoingConsignmentResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	merc__prepareOutgoingConsignmentResponse->soap_get(soap, "merc:prepareOutgoingConsignmentResponse", "merc:PrepareOutgoingConsignmentResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::registerProductionOperationRequest(const char *endpoint, const char *soap_action, merc__RegisterProductionOperationRequest *merc__registerProductionOperationRequest, merc__RegisterProductionOperationResponse *merc__registerProductionOperationResponse)
{
	struct soap *soap = this;
	struct __ns4__registerProductionOperationRequest soap_tmp___ns4__registerProductionOperationRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "registerProductionOperationRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns4__registerProductionOperationRequest.merc__registerProductionOperationRequest = merc__registerProductionOperationRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__registerProductionOperationRequest(soap, &soap_tmp___ns4__registerProductionOperationRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__registerProductionOperationRequest(soap, &soap_tmp___ns4__registerProductionOperationRequest, "-ns4:registerProductionOperationRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__registerProductionOperationRequest(soap, &soap_tmp___ns4__registerProductionOperationRequest, "-ns4:registerProductionOperationRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!merc__registerProductionOperationResponse)
		return soap_closesock(soap);
	merc__registerProductionOperationResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	merc__registerProductionOperationResponse->soap_get(soap, "merc:registerProductionOperationResponse", "merc:RegisterProductionOperationResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::mergeStockEntriesRequest(const char *endpoint, const char *soap_action, merc__MergeStockEntriesRequest *merc__mergeStockEntriesRequest, merc__MergeStockEntriesResponse *merc__mergeStockEntriesResponse)
{
	struct soap *soap = this;
	struct __ns4__mergeStockEntriesRequest soap_tmp___ns4__mergeStockEntriesRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "mergeStockEntriesRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns4__mergeStockEntriesRequest.merc__mergeStockEntriesRequest = merc__mergeStockEntriesRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__mergeStockEntriesRequest(soap, &soap_tmp___ns4__mergeStockEntriesRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__mergeStockEntriesRequest(soap, &soap_tmp___ns4__mergeStockEntriesRequest, "-ns4:mergeStockEntriesRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__mergeStockEntriesRequest(soap, &soap_tmp___ns4__mergeStockEntriesRequest, "-ns4:mergeStockEntriesRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!merc__mergeStockEntriesResponse)
		return soap_closesock(soap);
	merc__mergeStockEntriesResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	merc__mergeStockEntriesResponse->soap_get(soap, "merc:mergeStockEntriesResponse", "merc:MergeStockEntriesResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::withdrawVetDocumentRequest(const char *endpoint, const char *soap_action, merc__WithdrawVetDocumentRequest *merc__withdrawVetDocumentRequest, merc__WithdrawVetDocumentResponse *merc__withdrawVetDocumentResponse)
{
	struct soap *soap = this;
	struct __ns4__withdrawVetDocumentRequest soap_tmp___ns4__withdrawVetDocumentRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "withdrawVetDocumentRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns4__withdrawVetDocumentRequest.merc__withdrawVetDocumentRequest = merc__withdrawVetDocumentRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__withdrawVetDocumentRequest(soap, &soap_tmp___ns4__withdrawVetDocumentRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__withdrawVetDocumentRequest(soap, &soap_tmp___ns4__withdrawVetDocumentRequest, "-ns4:withdrawVetDocumentRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__withdrawVetDocumentRequest(soap, &soap_tmp___ns4__withdrawVetDocumentRequest, "-ns4:withdrawVetDocumentRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!merc__withdrawVetDocumentResponse)
		return soap_closesock(soap);
	merc__withdrawVetDocumentResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	merc__withdrawVetDocumentResponse->soap_get(soap, "merc:withdrawVetDocumentResponse", "merc:WithdrawVetDocumentResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::modifyBusinessEntityRequest(const char *endpoint, const char *soap_action, merc__ModifyBusinessEntityRequest *merc__modifyBusinessEntityRequest, merc__ModifyBusinessEntityResponse *merc__modifyBusinessEntityResponse)
{
	struct soap *soap = this;
	struct __ns4__modifyBusinessEntityRequest soap_tmp___ns4__modifyBusinessEntityRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "modifyBusinessEntityRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns4__modifyBusinessEntityRequest.merc__modifyBusinessEntityRequest = merc__modifyBusinessEntityRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__modifyBusinessEntityRequest(soap, &soap_tmp___ns4__modifyBusinessEntityRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__modifyBusinessEntityRequest(soap, &soap_tmp___ns4__modifyBusinessEntityRequest, "-ns4:modifyBusinessEntityRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__modifyBusinessEntityRequest(soap, &soap_tmp___ns4__modifyBusinessEntityRequest, "-ns4:modifyBusinessEntityRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!merc__modifyBusinessEntityResponse)
		return soap_closesock(soap);
	merc__modifyBusinessEntityResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	merc__modifyBusinessEntityResponse->soap_get(soap, "merc:modifyBusinessEntityResponse", "merc:ModifyBusinessEntityResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::modifyEnterpriseRequest(const char *endpoint, const char *soap_action, merc__ModifyEnterpriseRequest *merc__modifyEnterpriseRequest, merc__ModifyEnterpriseResponse *merc__modifyEnterpriseResponse)
{
	struct soap *soap = this;
	struct __ns4__modifyEnterpriseRequest soap_tmp___ns4__modifyEnterpriseRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "modifyEnterpriseRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns4__modifyEnterpriseRequest.merc__modifyEnterpriseRequest = merc__modifyEnterpriseRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__modifyEnterpriseRequest(soap, &soap_tmp___ns4__modifyEnterpriseRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__modifyEnterpriseRequest(soap, &soap_tmp___ns4__modifyEnterpriseRequest, "-ns4:modifyEnterpriseRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__modifyEnterpriseRequest(soap, &soap_tmp___ns4__modifyEnterpriseRequest, "-ns4:modifyEnterpriseRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!merc__modifyEnterpriseResponse)
		return soap_closesock(soap);
	merc__modifyEnterpriseResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	merc__modifyEnterpriseResponse->soap_get(soap, "merc:modifyEnterpriseResponse", "merc:ModifyEnterpriseResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::modifyActivityLocationsRequest(const char *endpoint, const char *soap_action, merc__ModifyActivityLocationsRequest *merc__modifyActivityLocationsRequest, merc__ModifyActivityLocationsResponse *merc__modifyActivityLocationsResponse)
{
	struct soap *soap = this;
	struct __ns4__modifyActivityLocationsRequest soap_tmp___ns4__modifyActivityLocationsRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "modifyActivityLocationsRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns4__modifyActivityLocationsRequest.merc__modifyActivityLocationsRequest = merc__modifyActivityLocationsRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__modifyActivityLocationsRequest(soap, &soap_tmp___ns4__modifyActivityLocationsRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__modifyActivityLocationsRequest(soap, &soap_tmp___ns4__modifyActivityLocationsRequest, "-ns4:modifyActivityLocationsRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__modifyActivityLocationsRequest(soap, &soap_tmp___ns4__modifyActivityLocationsRequest, "-ns4:modifyActivityLocationsRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!merc__modifyActivityLocationsResponse)
		return soap_closesock(soap);
	merc__modifyActivityLocationsResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	merc__modifyActivityLocationsResponse->soap_get(soap, "merc:modifyActivityLocationsResponse", "merc:ModifyActivityLocationsResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::resolveDiscrepancyRequest(const char *endpoint, const char *soap_action, merc__ResolveDiscrepancyRequest *merc__resolveDiscrepancyRequest, merc__ResolveDiscrepancyResponse *merc__resolveDiscrepancyResponse)
{
	struct soap *soap = this;
	struct __ns4__resolveDiscrepancyRequest soap_tmp___ns4__resolveDiscrepancyRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "resolveDiscrepancyRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns4__resolveDiscrepancyRequest.merc__resolveDiscrepancyRequest = merc__resolveDiscrepancyRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__resolveDiscrepancyRequest(soap, &soap_tmp___ns4__resolveDiscrepancyRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__resolveDiscrepancyRequest(soap, &soap_tmp___ns4__resolveDiscrepancyRequest, "-ns4:resolveDiscrepancyRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__resolveDiscrepancyRequest(soap, &soap_tmp___ns4__resolveDiscrepancyRequest, "-ns4:resolveDiscrepancyRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!merc__resolveDiscrepancyResponse)
		return soap_closesock(soap);
	merc__resolveDiscrepancyResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	merc__resolveDiscrepancyResponse->soap_get(soap, "merc:resolveDiscrepancyResponse", "merc:ResolveDiscrepancyResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::modifyProducerStockListRequest(const char *endpoint, const char *soap_action, merc__ModifyProducerStockListRequest *merc__modifyProducerStockListRequest, merc__ModifyProducerStockListResponse *merc__modifyProducerStockListResponse)
{
	struct soap *soap = this;
	struct __ns4__modifyProducerStockListRequest soap_tmp___ns4__modifyProducerStockListRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "modifyProducerStockListRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns4__modifyProducerStockListRequest.merc__modifyProducerStockListRequest = merc__modifyProducerStockListRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__modifyProducerStockListRequest(soap, &soap_tmp___ns4__modifyProducerStockListRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__modifyProducerStockListRequest(soap, &soap_tmp___ns4__modifyProducerStockListRequest, "-ns4:modifyProducerStockListRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__modifyProducerStockListRequest(soap, &soap_tmp___ns4__modifyProducerStockListRequest, "-ns4:modifyProducerStockListRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!merc__modifyProducerStockListResponse)
		return soap_closesock(soap);
	merc__modifyProducerStockListResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	merc__modifyProducerStockListResponse->soap_get(soap, "merc:modifyProducerStockListResponse", "merc:ModifyProducerStockListResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::getVetDocumentByUuidRequest(const char *endpoint, const char *soap_action, merc__GetVetDocumentByUuidRequest *merc__getVetDocumentByUuidRequest, merc__GetVetDocumentByUuidResponse *merc__getVetDocumentByUuidResponse)
{
	struct soap *soap = this;
	struct __ns4__getVetDocumentByUuidRequest soap_tmp___ns4__getVetDocumentByUuidRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "getVetDocumentByUuidRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns4__getVetDocumentByUuidRequest.merc__getVetDocumentByUuidRequest = merc__getVetDocumentByUuidRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getVetDocumentByUuidRequest(soap, &soap_tmp___ns4__getVetDocumentByUuidRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__getVetDocumentByUuidRequest(soap, &soap_tmp___ns4__getVetDocumentByUuidRequest, "-ns4:getVetDocumentByUuidRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getVetDocumentByUuidRequest(soap, &soap_tmp___ns4__getVetDocumentByUuidRequest, "-ns4:getVetDocumentByUuidRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!merc__getVetDocumentByUuidResponse)
		return soap_closesock(soap);
	merc__getVetDocumentByUuidResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	merc__getVetDocumentByUuidResponse->soap_get(soap, "merc:getVetDocumentByUuidResponse", "merc:GetVetDocumentByUuidResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::getVetDocumentListRequest(const char *endpoint, const char *soap_action, merc__GetVetDocumentListRequest *merc__getVetDocumentListRequest, merc__GetVetDocumentListResponse *merc__getVetDocumentListResponse)
{
	struct soap *soap = this;
	struct __ns4__getVetDocumentListRequest soap_tmp___ns4__getVetDocumentListRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "getVetDocumentListRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns4__getVetDocumentListRequest.merc__getVetDocumentListRequest = merc__getVetDocumentListRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getVetDocumentListRequest(soap, &soap_tmp___ns4__getVetDocumentListRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__getVetDocumentListRequest(soap, &soap_tmp___ns4__getVetDocumentListRequest, "-ns4:getVetDocumentListRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getVetDocumentListRequest(soap, &soap_tmp___ns4__getVetDocumentListRequest, "-ns4:getVetDocumentListRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!merc__getVetDocumentListResponse)
		return soap_closesock(soap);
	merc__getVetDocumentListResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	merc__getVetDocumentListResponse->soap_get(soap, "merc:getVetDocumentListResponse", "merc:GetVetDocumentListResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::getVetDocumentChangesListRequest(const char *endpoint, const char *soap_action, merc__GetVetDocumentChangesListRequest *merc__getVetDocumentChangesListRequest, merc__GetVetDocumentChangesListResponse *merc__getVetDocumentChangesListResponse)
{
	struct soap *soap = this;
	struct __ns4__getVetDocumentChangesListRequest soap_tmp___ns4__getVetDocumentChangesListRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "getVetDocumentChangesListRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns4__getVetDocumentChangesListRequest.merc__getVetDocumentChangesListRequest = merc__getVetDocumentChangesListRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getVetDocumentChangesListRequest(soap, &soap_tmp___ns4__getVetDocumentChangesListRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__getVetDocumentChangesListRequest(soap, &soap_tmp___ns4__getVetDocumentChangesListRequest, "-ns4:getVetDocumentChangesListRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getVetDocumentChangesListRequest(soap, &soap_tmp___ns4__getVetDocumentChangesListRequest, "-ns4:getVetDocumentChangesListRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!merc__getVetDocumentChangesListResponse)
		return soap_closesock(soap);
	merc__getVetDocumentChangesListResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	merc__getVetDocumentChangesListResponse->soap_get(soap, "merc:getVetDocumentChangesListResponse", "merc:GetVetDocumentChangesListResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::getStockEntryByGuidRequest(const char *endpoint, const char *soap_action, merc__GetStockEntryByGuidRequest *merc__getStockEntryByGuidRequest, merc__GetStockEntryByGuidResponse *merc__getStockEntryByGuidResponse)
{
	struct soap *soap = this;
	struct __ns4__getStockEntryByGuidRequest soap_tmp___ns4__getStockEntryByGuidRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "getStockEntryByGuidRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns4__getStockEntryByGuidRequest.merc__getStockEntryByGuidRequest = merc__getStockEntryByGuidRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getStockEntryByGuidRequest(soap, &soap_tmp___ns4__getStockEntryByGuidRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__getStockEntryByGuidRequest(soap, &soap_tmp___ns4__getStockEntryByGuidRequest, "-ns4:getStockEntryByGuidRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getStockEntryByGuidRequest(soap, &soap_tmp___ns4__getStockEntryByGuidRequest, "-ns4:getStockEntryByGuidRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!merc__getStockEntryByGuidResponse)
		return soap_closesock(soap);
	merc__getStockEntryByGuidResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	merc__getStockEntryByGuidResponse->soap_get(soap, "merc:getStockEntryByGuidResponse", "merc:GetStockEntryByGuidResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::getStockEntryByUuidRequest(const char *endpoint, const char *soap_action, merc__GetStockEntryByUuidRequest *merc__getStockEntryByUuidRequest, merc__GetStockEntryByUuidResponse *merc__getStockEntryByUuidResponse)
{
	struct soap *soap = this;
	struct __ns4__getStockEntryByUuidRequest soap_tmp___ns4__getStockEntryByUuidRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "getStockEntryByUuidRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns4__getStockEntryByUuidRequest.merc__getStockEntryByUuidRequest = merc__getStockEntryByUuidRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getStockEntryByUuidRequest(soap, &soap_tmp___ns4__getStockEntryByUuidRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__getStockEntryByUuidRequest(soap, &soap_tmp___ns4__getStockEntryByUuidRequest, "-ns4:getStockEntryByUuidRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getStockEntryByUuidRequest(soap, &soap_tmp___ns4__getStockEntryByUuidRequest, "-ns4:getStockEntryByUuidRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!merc__getStockEntryByUuidResponse)
		return soap_closesock(soap);
	merc__getStockEntryByUuidResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	merc__getStockEntryByUuidResponse->soap_get(soap, "merc:getStockEntryByUuidResponse", "merc:GetStockEntryByUuidResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::getStockEntryListRequest(const char *endpoint, const char *soap_action, merc__GetStockEntryListRequest *merc__getStockEntryListRequest, merc__GetStockEntryListResponse *merc__getStockEntryListResponse)
{
	struct soap *soap = this;
	struct __ns4__getStockEntryListRequest soap_tmp___ns4__getStockEntryListRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "getStockEntryListRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns4__getStockEntryListRequest.merc__getStockEntryListRequest = merc__getStockEntryListRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getStockEntryListRequest(soap, &soap_tmp___ns4__getStockEntryListRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__getStockEntryListRequest(soap, &soap_tmp___ns4__getStockEntryListRequest, "-ns4:getStockEntryListRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getStockEntryListRequest(soap, &soap_tmp___ns4__getStockEntryListRequest, "-ns4:getStockEntryListRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!merc__getStockEntryListResponse)
		return soap_closesock(soap);
	merc__getStockEntryListResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	merc__getStockEntryListResponse->soap_get(soap, "merc:getStockEntryListResponse", "merc:GetStockEntryListResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::getStockEntryChangesListRequest(const char *endpoint, const char *soap_action, merc__GetStockEntryChangesListRequest *merc__getStockEntryChangesListRequest, merc__GetStockEntryChangesListResponse *merc__getStockEntryChangesListResponse)
{
	struct soap *soap = this;
	struct __ns4__getStockEntryChangesListRequest soap_tmp___ns4__getStockEntryChangesListRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "getStockEntryChangesListRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns4__getStockEntryChangesListRequest.merc__getStockEntryChangesListRequest = merc__getStockEntryChangesListRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getStockEntryChangesListRequest(soap, &soap_tmp___ns4__getStockEntryChangesListRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__getStockEntryChangesListRequest(soap, &soap_tmp___ns4__getStockEntryChangesListRequest, "-ns4:getStockEntryChangesListRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getStockEntryChangesListRequest(soap, &soap_tmp___ns4__getStockEntryChangesListRequest, "-ns4:getStockEntryChangesListRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!merc__getStockEntryChangesListResponse)
		return soap_closesock(soap);
	merc__getStockEntryChangesListResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	merc__getStockEntryChangesListResponse->soap_get(soap, "merc:getStockEntryChangesListResponse", "merc:GetStockEntryChangesListResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::getStockEntryVersionListRequest(const char *endpoint, const char *soap_action, merc__GetStockEntryVersionListRequest *merc__getStockEntryVersionListRequest, merc__GetStockEntryVersionListResponse *merc__getStockEntryVersionListResponse)
{
	struct soap *soap = this;
	struct __ns4__getStockEntryVersionListRequest soap_tmp___ns4__getStockEntryVersionListRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "getStockEntryVersionListRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns4__getStockEntryVersionListRequest.merc__getStockEntryVersionListRequest = merc__getStockEntryVersionListRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getStockEntryVersionListRequest(soap, &soap_tmp___ns4__getStockEntryVersionListRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__getStockEntryVersionListRequest(soap, &soap_tmp___ns4__getStockEntryVersionListRequest, "-ns4:getStockEntryVersionListRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getStockEntryVersionListRequest(soap, &soap_tmp___ns4__getStockEntryVersionListRequest, "-ns4:getStockEntryVersionListRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!merc__getStockEntryVersionListResponse)
		return soap_closesock(soap);
	merc__getStockEntryVersionListResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	merc__getStockEntryVersionListResponse->soap_get(soap, "merc:getStockEntryVersionListResponse", "merc:GetStockEntryVersionListResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::updateTransportMovementDetailsRequest(const char *endpoint, const char *soap_action, merc__UpdateTransportMovementDetailsRequest *merc__updateTransportMovementDetailsRequest, merc__UpdateTransportMovementDetailsResponse *merc__updateTransportMovementDetailsResponse)
{
	struct soap *soap = this;
	struct __ns4__updateTransportMovementDetailsRequest soap_tmp___ns4__updateTransportMovementDetailsRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "updateTransportMovementDetailsRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns4__updateTransportMovementDetailsRequest.merc__updateTransportMovementDetailsRequest = merc__updateTransportMovementDetailsRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__updateTransportMovementDetailsRequest(soap, &soap_tmp___ns4__updateTransportMovementDetailsRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__updateTransportMovementDetailsRequest(soap, &soap_tmp___ns4__updateTransportMovementDetailsRequest, "-ns4:updateTransportMovementDetailsRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__updateTransportMovementDetailsRequest(soap, &soap_tmp___ns4__updateTransportMovementDetailsRequest, "-ns4:updateTransportMovementDetailsRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!merc__updateTransportMovementDetailsResponse)
		return soap_closesock(soap);
	merc__updateTransportMovementDetailsResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	merc__updateTransportMovementDetailsResponse->soap_get(soap, "merc:updateTransportMovementDetailsResponse", "merc:UpdateTransportMovementDetailsResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::updateVeterinaryEventsRequest(const char *endpoint, const char *soap_action, merc__UpdateVeterinaryEventsRequest *merc__updateVeterinaryEventsRequest, merc__UpdateVeterinaryEventsResponse *merc__updateVeterinaryEventsResponse)
{
	struct soap *soap = this;
	struct __ns4__updateVeterinaryEventsRequest soap_tmp___ns4__updateVeterinaryEventsRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "updateVeterinaryEventsRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns4__updateVeterinaryEventsRequest.merc__updateVeterinaryEventsRequest = merc__updateVeterinaryEventsRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__updateVeterinaryEventsRequest(soap, &soap_tmp___ns4__updateVeterinaryEventsRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__updateVeterinaryEventsRequest(soap, &soap_tmp___ns4__updateVeterinaryEventsRequest, "-ns4:updateVeterinaryEventsRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__updateVeterinaryEventsRequest(soap, &soap_tmp___ns4__updateVeterinaryEventsRequest, "-ns4:updateVeterinaryEventsRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!merc__updateVeterinaryEventsResponse)
		return soap_closesock(soap);
	merc__updateVeterinaryEventsResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	merc__updateVeterinaryEventsResponse->soap_get(soap, "merc:updateVeterinaryEventsResponse", "merc:UpdateVeterinaryEventsResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::checkShipmentRegionalizationRequest(const char *endpoint, const char *soap_action, merc__CheckShipmentRegionalizationRequest *merc__checkShipmentRegionalizationRequest, merc__CheckShipmentRegionalizationResponse *merc__checkShipmentRegionalizationResponse)
{
	struct soap *soap = this;
	struct __ns4__checkShipmentRegionalizationRequest soap_tmp___ns4__checkShipmentRegionalizationRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "checkShipmentRegionalizationRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns4__checkShipmentRegionalizationRequest.merc__checkShipmentRegionalizationRequest = merc__checkShipmentRegionalizationRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__checkShipmentRegionalizationRequest(soap, &soap_tmp___ns4__checkShipmentRegionalizationRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__checkShipmentRegionalizationRequest(soap, &soap_tmp___ns4__checkShipmentRegionalizationRequest, "-ns4:checkShipmentRegionalizationRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__checkShipmentRegionalizationRequest(soap, &soap_tmp___ns4__checkShipmentRegionalizationRequest, "-ns4:checkShipmentRegionalizationRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!merc__checkShipmentRegionalizationResponse)
		return soap_closesock(soap);
	merc__checkShipmentRegionalizationResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	merc__checkShipmentRegionalizationResponse->soap_get(soap, "merc:checkShipmentRegionalizationResponse", "merc:CheckShipmentRegionalizationResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::addBusinessEntityUserRequest(const char *endpoint, const char *soap_action, merc__AddBusinessEntityUserRequest *merc__addBusinessEntityUserRequest, merc__AddBusinessEntityUserResponse *merc__addBusinessEntityUserResponse)
{
	struct soap *soap = this;
	struct __ns4__addBusinessEntityUserRequest soap_tmp___ns4__addBusinessEntityUserRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "addBusinessEntityUserRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns4__addBusinessEntityUserRequest.merc__addBusinessEntityUserRequest = merc__addBusinessEntityUserRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__addBusinessEntityUserRequest(soap, &soap_tmp___ns4__addBusinessEntityUserRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__addBusinessEntityUserRequest(soap, &soap_tmp___ns4__addBusinessEntityUserRequest, "-ns4:addBusinessEntityUserRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__addBusinessEntityUserRequest(soap, &soap_tmp___ns4__addBusinessEntityUserRequest, "-ns4:addBusinessEntityUserRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!merc__addBusinessEntityUserResponse)
		return soap_closesock(soap);
	merc__addBusinessEntityUserResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	merc__addBusinessEntityUserResponse->soap_get(soap, "merc:addBusinessEntityUserResponse", "merc:AddBusinessEntityUserResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::getBusinessEntityUserListRequest(const char *endpoint, const char *soap_action, merc__GetBusinessEntityUserListRequest *merc__getBusinessEntityUserListRequest, merc__GetBusinessEntityUserListResponse *merc__getBusinessEntityUserListResponse)
{
	struct soap *soap = this;
	struct __ns4__getBusinessEntityUserListRequest soap_tmp___ns4__getBusinessEntityUserListRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "getBusinessEntityUserListRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns4__getBusinessEntityUserListRequest.merc__getBusinessEntityUserListRequest = merc__getBusinessEntityUserListRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getBusinessEntityUserListRequest(soap, &soap_tmp___ns4__getBusinessEntityUserListRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__getBusinessEntityUserListRequest(soap, &soap_tmp___ns4__getBusinessEntityUserListRequest, "-ns4:getBusinessEntityUserListRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getBusinessEntityUserListRequest(soap, &soap_tmp___ns4__getBusinessEntityUserListRequest, "-ns4:getBusinessEntityUserListRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!merc__getBusinessEntityUserListResponse)
		return soap_closesock(soap);
	merc__getBusinessEntityUserListResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	merc__getBusinessEntityUserListResponse->soap_get(soap, "merc:getBusinessEntityUserListResponse", "merc:GetBusinessEntityUserListResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::getBusinessEntityUserRequest(const char *endpoint, const char *soap_action, merc__GetBusinessEntityUserRequest *merc__getBusinessEntityUserRequest, merc__GetBusinessEntityUserResponse *merc__getBusinessEntityUserResponse)
{
	struct soap *soap = this;
	struct __ns4__getBusinessEntityUserRequest soap_tmp___ns4__getBusinessEntityUserRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "getBusinessEntityUserRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns4__getBusinessEntityUserRequest.merc__getBusinessEntityUserRequest = merc__getBusinessEntityUserRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getBusinessEntityUserRequest(soap, &soap_tmp___ns4__getBusinessEntityUserRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__getBusinessEntityUserRequest(soap, &soap_tmp___ns4__getBusinessEntityUserRequest, "-ns4:getBusinessEntityUserRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getBusinessEntityUserRequest(soap, &soap_tmp___ns4__getBusinessEntityUserRequest, "-ns4:getBusinessEntityUserRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!merc__getBusinessEntityUserResponse)
		return soap_closesock(soap);
	merc__getBusinessEntityUserResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	merc__getBusinessEntityUserResponse->soap_get(soap, "merc:getBusinessEntityUserResponse", "merc:GetBusinessEntityUserResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::updateUserAuthoritiesRequest(const char *endpoint, const char *soap_action, merc__UpdateUserAuthoritiesRequest *merc__updateUserAuthoritiesRequest, merc__UpdateUserAuthoritiesResponse *merc__updateUserAuthoritiesResponse)
{
	struct soap *soap = this;
	struct __ns4__updateUserAuthoritiesRequest soap_tmp___ns4__updateUserAuthoritiesRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "updateUserAuthoritiesRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns4__updateUserAuthoritiesRequest.merc__updateUserAuthoritiesRequest = merc__updateUserAuthoritiesRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__updateUserAuthoritiesRequest(soap, &soap_tmp___ns4__updateUserAuthoritiesRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__updateUserAuthoritiesRequest(soap, &soap_tmp___ns4__updateUserAuthoritiesRequest, "-ns4:updateUserAuthoritiesRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__updateUserAuthoritiesRequest(soap, &soap_tmp___ns4__updateUserAuthoritiesRequest, "-ns4:updateUserAuthoritiesRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!merc__updateUserAuthoritiesResponse)
		return soap_closesock(soap);
	merc__updateUserAuthoritiesResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	merc__updateUserAuthoritiesResponse->soap_get(soap, "merc:updateUserAuthoritiesResponse", "merc:UpdateUserAuthoritiesResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::updateUserWorkingAreasRequest(const char *endpoint, const char *soap_action, merc__UpdateUserWorkingAreasRequest *merc__updateUserWorkingAreasRequest, merc__UpdateUserWorkingAreasResponse *merc__updateUserWorkingAreasResponse)
{
	struct soap *soap = this;
	struct __ns4__updateUserWorkingAreasRequest soap_tmp___ns4__updateUserWorkingAreasRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "updateUserWorkingAreasRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns4__updateUserWorkingAreasRequest.merc__updateUserWorkingAreasRequest = merc__updateUserWorkingAreasRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__updateUserWorkingAreasRequest(soap, &soap_tmp___ns4__updateUserWorkingAreasRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__updateUserWorkingAreasRequest(soap, &soap_tmp___ns4__updateUserWorkingAreasRequest, "-ns4:updateUserWorkingAreasRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__updateUserWorkingAreasRequest(soap, &soap_tmp___ns4__updateUserWorkingAreasRequest, "-ns4:updateUserWorkingAreasRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!merc__updateUserWorkingAreasResponse)
		return soap_closesock(soap);
	merc__updateUserWorkingAreasResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	merc__updateUserWorkingAreasResponse->soap_get(soap, "merc:updateUserWorkingAreasResponse", "merc:UpdateUserWorkingAreasResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::unbindBusinessEntityUserRequest(const char *endpoint, const char *soap_action, merc__UnbindBusinessEntityUserRequest *merc__unbindBusinessEntityUserRequest, merc__UnbindBusinessEntityUserResponse *merc__unbindBusinessEntityUserResponse)
{
	struct soap *soap = this;
	struct __ns4__unbindBusinessEntityUserRequest soap_tmp___ns4__unbindBusinessEntityUserRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "unbindBusinessEntityUserRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns4__unbindBusinessEntityUserRequest.merc__unbindBusinessEntityUserRequest = merc__unbindBusinessEntityUserRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__unbindBusinessEntityUserRequest(soap, &soap_tmp___ns4__unbindBusinessEntityUserRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__unbindBusinessEntityUserRequest(soap, &soap_tmp___ns4__unbindBusinessEntityUserRequest, "-ns4:unbindBusinessEntityUserRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__unbindBusinessEntityUserRequest(soap, &soap_tmp___ns4__unbindBusinessEntityUserRequest, "-ns4:unbindBusinessEntityUserRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!merc__unbindBusinessEntityUserResponse)
		return soap_closesock(soap);
	merc__unbindBusinessEntityUserResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	merc__unbindBusinessEntityUserResponse->soap_get(soap, "merc:unbindBusinessEntityUserResponse", "merc:UnbindBusinessEntityUserResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::getAppliedUserAuthorityListRequest(const char *endpoint, const char *soap_action, merc__GetAppliedUserAuthorityListRequest *merc__getAppliedUserAuthorityListRequest, merc__GetAppliedUserAuthorityListResponse *merc__getAppliedUserAuthorityListResponse)
{
	struct soap *soap = this;
	struct __ns4__getAppliedUserAuthorityListRequest soap_tmp___ns4__getAppliedUserAuthorityListRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "getAppliedUserAuthorityListRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns4__getAppliedUserAuthorityListRequest.merc__getAppliedUserAuthorityListRequest = merc__getAppliedUserAuthorityListRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getAppliedUserAuthorityListRequest(soap, &soap_tmp___ns4__getAppliedUserAuthorityListRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__getAppliedUserAuthorityListRequest(soap, &soap_tmp___ns4__getAppliedUserAuthorityListRequest, "-ns4:getAppliedUserAuthorityListRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getAppliedUserAuthorityListRequest(soap, &soap_tmp___ns4__getAppliedUserAuthorityListRequest, "-ns4:getAppliedUserAuthorityListRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!merc__getAppliedUserAuthorityListResponse)
		return soap_closesock(soap);
	merc__getAppliedUserAuthorityListResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	merc__getAppliedUserAuthorityListResponse->soap_get(soap, "merc:getAppliedUserAuthorityListResponse", "merc:GetAppliedUserAuthorityListResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
