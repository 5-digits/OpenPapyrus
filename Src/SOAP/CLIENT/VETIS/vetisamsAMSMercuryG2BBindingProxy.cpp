/* vetisamsAMSMercuryG2BBindingProxy.cpp
   Generated by gSOAP 2.8.8 from vetisams.h

Copyright(C) 2000-2012, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#include "vetisamsAMSMercuryG2BBindingProxy.h"

AMSMercuryG2BBindingProxy::AMSMercuryG2BBindingProxy()
{
	AMSMercuryG2BBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

AMSMercuryG2BBindingProxy::AMSMercuryG2BBindingProxy(const struct soap &_soap) : soap(_soap)
{ }

AMSMercuryG2BBindingProxy::AMSMercuryG2BBindingProxy(const char *url)
{
	AMSMercuryG2BBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = url;
}

AMSMercuryG2BBindingProxy::AMSMercuryG2BBindingProxy(soap_mode iomode)
{
	AMSMercuryG2BBindingProxy_init(iomode, iomode);
}

AMSMercuryG2BBindingProxy::AMSMercuryG2BBindingProxy(const char *url, soap_mode iomode)
{
	AMSMercuryG2BBindingProxy_init(iomode, iomode);
	soap_endpoint = url;
}

AMSMercuryG2BBindingProxy::AMSMercuryG2BBindingProxy(soap_mode imode, soap_mode omode)
{
	AMSMercuryG2BBindingProxy_init(imode, omode);
}

AMSMercuryG2BBindingProxy::~AMSMercuryG2BBindingProxy()
{ }

void AMSMercuryG2BBindingProxy::AMSMercuryG2BBindingProxy_init(soap_mode imode, soap_mode omode)
{
	soap_imode(this, imode);
	soap_omode(this, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL},
	{"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"ns4", "http://api.vetrf.ru/schema/cdm/application", NULL, NULL},
	{"ns3", "http://api.vetrf.ru/schema/cdm/base", NULL, NULL},
	{"ns6", "http://api.vetrf.ru/schema/cdm/dictionary/v2", NULL, NULL},
	{"ns7", "http://api.vetrf.ru/schema/cdm/mercury/vet-document/v2", NULL, NULL},
	{"ns2", "http://api.vetrf.ru/schema/cdm/base/ws-definitions", NULL, NULL},
	{"ns10", "http://api.vetrf.ru/schema/cdm/application/service", NULL, NULL},
	{"ns1", "http://api.vetrf.ru/schema/cdm/application/ws-definitions", NULL, NULL},
	{"ns11", "http://api.vetrf.ru/schema/cdm/mercury/g2b/service/v2", NULL, NULL},
	{"ns5", "http://api.vetrf.ru/schema/cdm/mercury/g2b/applications/v2", NULL, NULL},
	{"ns9", "http://api.vetrf.ru/schema/cdm/registry/enterprise/service/v2", NULL, NULL},
	{"ns8", "http://api.vetrf.ru/schema/cdm/registry/ws-definitions/v2", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this, namespaces);
}

void AMSMercuryG2BBindingProxy::destroy()
{
	soap_destroy(this);
	soap_end(this);
}

void AMSMercuryG2BBindingProxy::reset()
{
	destroy();
	soap_done(this);
	soap_init(this);
	AMSMercuryG2BBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void AMSMercuryG2BBindingProxy::soap_noheader()
{
	this->header = NULL;
}

const SOAP_ENV__Header *AMSMercuryG2BBindingProxy::soap_header()
{
	return this->header;
}

const SOAP_ENV__Fault *AMSMercuryG2BBindingProxy::soap_fault()
{
	return this->fault;
}

const char *AMSMercuryG2BBindingProxy::soap_fault_string()
{
	return *soap_faultstring(this);
}

const char *AMSMercuryG2BBindingProxy::soap_fault_detail()
{
	return *soap_faultdetail(this);
}

int AMSMercuryG2BBindingProxy::soap_close_socket()
{
	return soap_closesock(this);
}

int AMSMercuryG2BBindingProxy::soap_force_close_socket()
{
	return soap_force_closesock(this);
}

void AMSMercuryG2BBindingProxy::soap_print_fault(FILE *fd)
{
	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void AMSMercuryG2BBindingProxy::soap_stream_fault(std::ostream& os)
{
	::soap_stream_fault(this, os);
}
#endif

char *AMSMercuryG2BBindingProxy::soap_sprint_fault(char *buf, size_t len)
{
	return ::soap_sprint_fault(this, buf, len);
}
#endif

int AMSMercuryG2BBindingProxy::processIncomingConsignmentRequest(const char *endpoint, const char *soap_action, ns5__ProcessIncomingConsignmentRequest *ns5__processIncomingConsignmentRequest, ns5__ProcessIncomingConsignmentResponse *ns5__processIncomingConsignmentResponse)
{
	struct soap *soap = this;
	struct __ns11__processIncomingConsignmentRequest soap_tmp___ns11__processIncomingConsignmentRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "processIncomingConsignmentRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns11__processIncomingConsignmentRequest.ns5__processIncomingConsignmentRequest = ns5__processIncomingConsignmentRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns11__processIncomingConsignmentRequest(soap, &soap_tmp___ns11__processIncomingConsignmentRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__processIncomingConsignmentRequest(soap, &soap_tmp___ns11__processIncomingConsignmentRequest, "-ns11:processIncomingConsignmentRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__processIncomingConsignmentRequest(soap, &soap_tmp___ns11__processIncomingConsignmentRequest, "-ns11:processIncomingConsignmentRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!ns5__processIncomingConsignmentResponse)
		return soap_closesock(soap);
	ns5__processIncomingConsignmentResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__processIncomingConsignmentResponse->soap_get(soap, "ns5:processIncomingConsignmentResponse", "ns5:ProcessIncomingConsignmentResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::prepareOutgoingConsignmentRequest(const char *endpoint, const char *soap_action, ns5__PrepareOutgoingConsignmentRequest *ns5__prepareOutgoingConsignmentRequest, ns5__PrepareOutgoingConsignmentResponse *ns5__prepareOutgoingConsignmentResponse)
{
	struct soap *soap = this;
	struct __ns11__prepareOutgoingConsignmentRequest soap_tmp___ns11__prepareOutgoingConsignmentRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "prepareOutgoingConsignmentRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns11__prepareOutgoingConsignmentRequest.ns5__prepareOutgoingConsignmentRequest = ns5__prepareOutgoingConsignmentRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns11__prepareOutgoingConsignmentRequest(soap, &soap_tmp___ns11__prepareOutgoingConsignmentRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__prepareOutgoingConsignmentRequest(soap, &soap_tmp___ns11__prepareOutgoingConsignmentRequest, "-ns11:prepareOutgoingConsignmentRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__prepareOutgoingConsignmentRequest(soap, &soap_tmp___ns11__prepareOutgoingConsignmentRequest, "-ns11:prepareOutgoingConsignmentRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!ns5__prepareOutgoingConsignmentResponse)
		return soap_closesock(soap);
	ns5__prepareOutgoingConsignmentResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__prepareOutgoingConsignmentResponse->soap_get(soap, "ns5:prepareOutgoingConsignmentResponse", "ns5:PrepareOutgoingConsignmentResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::registerProductionOperationRequest(const char *endpoint, const char *soap_action, ns5__RegisterProductionOperationRequest *ns5__registerProductionOperationRequest, ns5__RegisterProductionOperationResponse *ns5__registerProductionOperationResponse)
{
	struct soap *soap = this;
	struct __ns11__registerProductionOperationRequest soap_tmp___ns11__registerProductionOperationRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "registerProductionOperationRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns11__registerProductionOperationRequest.ns5__registerProductionOperationRequest = ns5__registerProductionOperationRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns11__registerProductionOperationRequest(soap, &soap_tmp___ns11__registerProductionOperationRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__registerProductionOperationRequest(soap, &soap_tmp___ns11__registerProductionOperationRequest, "-ns11:registerProductionOperationRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__registerProductionOperationRequest(soap, &soap_tmp___ns11__registerProductionOperationRequest, "-ns11:registerProductionOperationRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!ns5__registerProductionOperationResponse)
		return soap_closesock(soap);
	ns5__registerProductionOperationResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__registerProductionOperationResponse->soap_get(soap, "ns5:registerProductionOperationResponse", "ns5:RegisterProductionOperationResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::mergeStockEntriesRequest(const char *endpoint, const char *soap_action, ns5__MergeStockEntriesRequest *ns5__mergeStockEntriesRequest, ns5__MergeStockEntriesResponse *ns5__mergeStockEntriesResponse)
{
	struct soap *soap = this;
	struct __ns11__mergeStockEntriesRequest soap_tmp___ns11__mergeStockEntriesRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "mergeStockEntriesRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns11__mergeStockEntriesRequest.ns5__mergeStockEntriesRequest = ns5__mergeStockEntriesRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns11__mergeStockEntriesRequest(soap, &soap_tmp___ns11__mergeStockEntriesRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__mergeStockEntriesRequest(soap, &soap_tmp___ns11__mergeStockEntriesRequest, "-ns11:mergeStockEntriesRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__mergeStockEntriesRequest(soap, &soap_tmp___ns11__mergeStockEntriesRequest, "-ns11:mergeStockEntriesRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!ns5__mergeStockEntriesResponse)
		return soap_closesock(soap);
	ns5__mergeStockEntriesResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__mergeStockEntriesResponse->soap_get(soap, "ns5:mergeStockEntriesResponse", "ns5:MergeStockEntriesResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::withdrawVetDocumentRequest(const char *endpoint, const char *soap_action, ns5__WithdrawVetDocumentRequest *ns5__withdrawVetDocumentRequest, ns5__WithdrawVetDocumentResponse *ns5__withdrawVetDocumentResponse)
{
	struct soap *soap = this;
	struct __ns11__withdrawVetDocumentRequest soap_tmp___ns11__withdrawVetDocumentRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "withdrawVetDocumentRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns11__withdrawVetDocumentRequest.ns5__withdrawVetDocumentRequest = ns5__withdrawVetDocumentRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns11__withdrawVetDocumentRequest(soap, &soap_tmp___ns11__withdrawVetDocumentRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__withdrawVetDocumentRequest(soap, &soap_tmp___ns11__withdrawVetDocumentRequest, "-ns11:withdrawVetDocumentRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__withdrawVetDocumentRequest(soap, &soap_tmp___ns11__withdrawVetDocumentRequest, "-ns11:withdrawVetDocumentRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!ns5__withdrawVetDocumentResponse)
		return soap_closesock(soap);
	ns5__withdrawVetDocumentResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__withdrawVetDocumentResponse->soap_get(soap, "ns5:withdrawVetDocumentResponse", "ns5:WithdrawVetDocumentResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::modifyBusinessEntityRequest(const char *endpoint, const char *soap_action, ns5__ModifyBusinessEntityRequest *ns5__modifyBusinessEntityRequest, ns5__ModifyBusinessEntityResponse *ns5__modifyBusinessEntityResponse)
{
	struct soap *soap = this;
	struct __ns11__modifyBusinessEntityRequest soap_tmp___ns11__modifyBusinessEntityRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "modifyBusinessEntityRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns11__modifyBusinessEntityRequest.ns5__modifyBusinessEntityRequest = ns5__modifyBusinessEntityRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns11__modifyBusinessEntityRequest(soap, &soap_tmp___ns11__modifyBusinessEntityRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__modifyBusinessEntityRequest(soap, &soap_tmp___ns11__modifyBusinessEntityRequest, "-ns11:modifyBusinessEntityRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__modifyBusinessEntityRequest(soap, &soap_tmp___ns11__modifyBusinessEntityRequest, "-ns11:modifyBusinessEntityRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!ns5__modifyBusinessEntityResponse)
		return soap_closesock(soap);
	ns5__modifyBusinessEntityResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__modifyBusinessEntityResponse->soap_get(soap, "ns5:modifyBusinessEntityResponse", "ns5:ModifyBusinessEntityResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::modifyEnterpriseRequest(const char *endpoint, const char *soap_action, ns5__ModifyEnterpriseRequest *ns5__modifyEnterpriseRequest, ns5__ModifyEnterpriseResponse *ns5__modifyEnterpriseResponse)
{
	struct soap *soap = this;
	struct __ns11__modifyEnterpriseRequest soap_tmp___ns11__modifyEnterpriseRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "modifyEnterpriseRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns11__modifyEnterpriseRequest.ns5__modifyEnterpriseRequest = ns5__modifyEnterpriseRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns11__modifyEnterpriseRequest(soap, &soap_tmp___ns11__modifyEnterpriseRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__modifyEnterpriseRequest(soap, &soap_tmp___ns11__modifyEnterpriseRequest, "-ns11:modifyEnterpriseRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__modifyEnterpriseRequest(soap, &soap_tmp___ns11__modifyEnterpriseRequest, "-ns11:modifyEnterpriseRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!ns5__modifyEnterpriseResponse)
		return soap_closesock(soap);
	ns5__modifyEnterpriseResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__modifyEnterpriseResponse->soap_get(soap, "ns5:modifyEnterpriseResponse", "ns5:ModifyEnterpriseResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::modifyActivityLocationsRequest(const char *endpoint, const char *soap_action, ns5__ModifyActivityLocationsRequest *ns5__modifyActivityLocationsRequest, ns5__ModifyActivityLocationsResponse *ns5__modifyActivityLocationsResponse)
{
	struct soap *soap = this;
	struct __ns11__modifyActivityLocationsRequest soap_tmp___ns11__modifyActivityLocationsRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "modifyActivityLocationsRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns11__modifyActivityLocationsRequest.ns5__modifyActivityLocationsRequest = ns5__modifyActivityLocationsRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns11__modifyActivityLocationsRequest(soap, &soap_tmp___ns11__modifyActivityLocationsRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__modifyActivityLocationsRequest(soap, &soap_tmp___ns11__modifyActivityLocationsRequest, "-ns11:modifyActivityLocationsRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__modifyActivityLocationsRequest(soap, &soap_tmp___ns11__modifyActivityLocationsRequest, "-ns11:modifyActivityLocationsRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!ns5__modifyActivityLocationsResponse)
		return soap_closesock(soap);
	ns5__modifyActivityLocationsResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__modifyActivityLocationsResponse->soap_get(soap, "ns5:modifyActivityLocationsResponse", "ns5:ModifyActivityLocationsResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::resolveDiscrepancyRequest(const char *endpoint, const char *soap_action, ns5__ResolveDiscrepancyRequest *ns5__resolveDiscrepancyRequest, ns5__ResolveDiscrepancyResponse *ns5__resolveDiscrepancyResponse)
{
	struct soap *soap = this;
	struct __ns11__resolveDiscrepancyRequest soap_tmp___ns11__resolveDiscrepancyRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "resolveDiscrepancyRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns11__resolveDiscrepancyRequest.ns5__resolveDiscrepancyRequest = ns5__resolveDiscrepancyRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns11__resolveDiscrepancyRequest(soap, &soap_tmp___ns11__resolveDiscrepancyRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__resolveDiscrepancyRequest(soap, &soap_tmp___ns11__resolveDiscrepancyRequest, "-ns11:resolveDiscrepancyRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__resolveDiscrepancyRequest(soap, &soap_tmp___ns11__resolveDiscrepancyRequest, "-ns11:resolveDiscrepancyRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!ns5__resolveDiscrepancyResponse)
		return soap_closesock(soap);
	ns5__resolveDiscrepancyResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__resolveDiscrepancyResponse->soap_get(soap, "ns5:resolveDiscrepancyResponse", "ns5:ResolveDiscrepancyResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::modifyProducerStockListRequest(const char *endpoint, const char *soap_action, ns5__ModifyProducerStockListRequest *ns5__modifyProducerStockListRequest, ns5__ModifyProducerStockListResponse *ns5__modifyProducerStockListResponse)
{
	struct soap *soap = this;
	struct __ns11__modifyProducerStockListRequest soap_tmp___ns11__modifyProducerStockListRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "modifyProducerStockListRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns11__modifyProducerStockListRequest.ns5__modifyProducerStockListRequest = ns5__modifyProducerStockListRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns11__modifyProducerStockListRequest(soap, &soap_tmp___ns11__modifyProducerStockListRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__modifyProducerStockListRequest(soap, &soap_tmp___ns11__modifyProducerStockListRequest, "-ns11:modifyProducerStockListRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__modifyProducerStockListRequest(soap, &soap_tmp___ns11__modifyProducerStockListRequest, "-ns11:modifyProducerStockListRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!ns5__modifyProducerStockListResponse)
		return soap_closesock(soap);
	ns5__modifyProducerStockListResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__modifyProducerStockListResponse->soap_get(soap, "ns5:modifyProducerStockListResponse", "ns5:ModifyProducerStockListResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::getVetDocumentByUuidRequest(const char *endpoint, const char *soap_action, ns5__GetVetDocumentByUuidRequest *ns5__getVetDocumentByUuidRequest, ns5__GetVetDocumentByUuidResponse *ns5__getVetDocumentByUuidResponse)
{
	struct soap *soap = this;
	struct __ns11__getVetDocumentByUuidRequest soap_tmp___ns11__getVetDocumentByUuidRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "getVetDocumentByUuidRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns11__getVetDocumentByUuidRequest.ns5__getVetDocumentByUuidRequest = ns5__getVetDocumentByUuidRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns11__getVetDocumentByUuidRequest(soap, &soap_tmp___ns11__getVetDocumentByUuidRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__getVetDocumentByUuidRequest(soap, &soap_tmp___ns11__getVetDocumentByUuidRequest, "-ns11:getVetDocumentByUuidRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__getVetDocumentByUuidRequest(soap, &soap_tmp___ns11__getVetDocumentByUuidRequest, "-ns11:getVetDocumentByUuidRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!ns5__getVetDocumentByUuidResponse)
		return soap_closesock(soap);
	ns5__getVetDocumentByUuidResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__getVetDocumentByUuidResponse->soap_get(soap, "ns5:getVetDocumentByUuidResponse", "ns5:GetVetDocumentByUuidResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::getVetDocumentListRequest(const char *endpoint, const char *soap_action, ns5__GetVetDocumentListRequest *ns5__getVetDocumentListRequest, ns5__GetVetDocumentListResponse *ns5__getVetDocumentListResponse)
{
	struct soap *soap = this;
	struct __ns11__getVetDocumentListRequest soap_tmp___ns11__getVetDocumentListRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "getVetDocumentListRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns11__getVetDocumentListRequest.ns5__getVetDocumentListRequest = ns5__getVetDocumentListRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns11__getVetDocumentListRequest(soap, &soap_tmp___ns11__getVetDocumentListRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__getVetDocumentListRequest(soap, &soap_tmp___ns11__getVetDocumentListRequest, "-ns11:getVetDocumentListRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__getVetDocumentListRequest(soap, &soap_tmp___ns11__getVetDocumentListRequest, "-ns11:getVetDocumentListRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!ns5__getVetDocumentListResponse)
		return soap_closesock(soap);
	ns5__getVetDocumentListResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__getVetDocumentListResponse->soap_get(soap, "ns5:getVetDocumentListResponse", "ns5:GetVetDocumentListResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::getVetDocumentChangesListRequest(const char *endpoint, const char *soap_action, ns5__GetVetDocumentChangesListRequest *ns5__getVetDocumentChangesListRequest, ns5__GetVetDocumentChangesListResponse *ns5__getVetDocumentChangesListResponse)
{
	struct soap *soap = this;
	struct __ns11__getVetDocumentChangesListRequest soap_tmp___ns11__getVetDocumentChangesListRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "getVetDocumentChangesListRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns11__getVetDocumentChangesListRequest.ns5__getVetDocumentChangesListRequest = ns5__getVetDocumentChangesListRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns11__getVetDocumentChangesListRequest(soap, &soap_tmp___ns11__getVetDocumentChangesListRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__getVetDocumentChangesListRequest(soap, &soap_tmp___ns11__getVetDocumentChangesListRequest, "-ns11:getVetDocumentChangesListRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__getVetDocumentChangesListRequest(soap, &soap_tmp___ns11__getVetDocumentChangesListRequest, "-ns11:getVetDocumentChangesListRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!ns5__getVetDocumentChangesListResponse)
		return soap_closesock(soap);
	ns5__getVetDocumentChangesListResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__getVetDocumentChangesListResponse->soap_get(soap, "ns5:getVetDocumentChangesListResponse", "ns5:GetVetDocumentChangesListResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::getStockEntryByGuidRequest(const char *endpoint, const char *soap_action, ns5__GetStockEntryByGuidRequest *ns5__getStockEntryByGuidRequest, ns5__GetStockEntryByGuidResponse *ns5__getStockEntryByGuidResponse)
{
	struct soap *soap = this;
	struct __ns11__getStockEntryByGuidRequest soap_tmp___ns11__getStockEntryByGuidRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "getStockEntryByGuidRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns11__getStockEntryByGuidRequest.ns5__getStockEntryByGuidRequest = ns5__getStockEntryByGuidRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns11__getStockEntryByGuidRequest(soap, &soap_tmp___ns11__getStockEntryByGuidRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__getStockEntryByGuidRequest(soap, &soap_tmp___ns11__getStockEntryByGuidRequest, "-ns11:getStockEntryByGuidRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__getStockEntryByGuidRequest(soap, &soap_tmp___ns11__getStockEntryByGuidRequest, "-ns11:getStockEntryByGuidRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!ns5__getStockEntryByGuidResponse)
		return soap_closesock(soap);
	ns5__getStockEntryByGuidResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__getStockEntryByGuidResponse->soap_get(soap, "ns5:getStockEntryByGuidResponse", "ns5:GetStockEntryByGuidResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::getStockEntryByUuidRequest(const char *endpoint, const char *soap_action, ns5__GetStockEntryByUuidRequest *ns5__getStockEntryByUuidRequest, ns5__GetStockEntryByUuidResponse *ns5__getStockEntryByUuidResponse)
{
	struct soap *soap = this;
	struct __ns11__getStockEntryByUuidRequest soap_tmp___ns11__getStockEntryByUuidRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "getStockEntryByUuidRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns11__getStockEntryByUuidRequest.ns5__getStockEntryByUuidRequest = ns5__getStockEntryByUuidRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns11__getStockEntryByUuidRequest(soap, &soap_tmp___ns11__getStockEntryByUuidRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__getStockEntryByUuidRequest(soap, &soap_tmp___ns11__getStockEntryByUuidRequest, "-ns11:getStockEntryByUuidRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__getStockEntryByUuidRequest(soap, &soap_tmp___ns11__getStockEntryByUuidRequest, "-ns11:getStockEntryByUuidRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!ns5__getStockEntryByUuidResponse)
		return soap_closesock(soap);
	ns5__getStockEntryByUuidResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__getStockEntryByUuidResponse->soap_get(soap, "ns5:getStockEntryByUuidResponse", "ns5:GetStockEntryByUuidResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::getStockEntryListRequest(const char *endpoint, const char *soap_action, ns5__GetStockEntryListRequest *ns5__getStockEntryListRequest, ns5__GetStockEntryListResponse *ns5__getStockEntryListResponse)
{
	struct soap *soap = this;
	struct __ns11__getStockEntryListRequest soap_tmp___ns11__getStockEntryListRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "getStockEntryListRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns11__getStockEntryListRequest.ns5__getStockEntryListRequest = ns5__getStockEntryListRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns11__getStockEntryListRequest(soap, &soap_tmp___ns11__getStockEntryListRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__getStockEntryListRequest(soap, &soap_tmp___ns11__getStockEntryListRequest, "-ns11:getStockEntryListRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__getStockEntryListRequest(soap, &soap_tmp___ns11__getStockEntryListRequest, "-ns11:getStockEntryListRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!ns5__getStockEntryListResponse)
		return soap_closesock(soap);
	ns5__getStockEntryListResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__getStockEntryListResponse->soap_get(soap, "ns5:getStockEntryListResponse", "ns5:GetStockEntryListResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::getStockEntryChangesListRequest(const char *endpoint, const char *soap_action, ns5__GetStockEntryChangesListRequest *ns5__getStockEntryChangesListRequest, ns5__GetStockEntryChangesListResponse *ns5__getStockEntryChangesListResponse)
{
	struct soap *soap = this;
	struct __ns11__getStockEntryChangesListRequest soap_tmp___ns11__getStockEntryChangesListRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "getStockEntryChangesListRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns11__getStockEntryChangesListRequest.ns5__getStockEntryChangesListRequest = ns5__getStockEntryChangesListRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns11__getStockEntryChangesListRequest(soap, &soap_tmp___ns11__getStockEntryChangesListRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__getStockEntryChangesListRequest(soap, &soap_tmp___ns11__getStockEntryChangesListRequest, "-ns11:getStockEntryChangesListRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__getStockEntryChangesListRequest(soap, &soap_tmp___ns11__getStockEntryChangesListRequest, "-ns11:getStockEntryChangesListRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!ns5__getStockEntryChangesListResponse)
		return soap_closesock(soap);
	ns5__getStockEntryChangesListResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__getStockEntryChangesListResponse->soap_get(soap, "ns5:getStockEntryChangesListResponse", "ns5:GetStockEntryChangesListResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::getStockEntryVersionListRequest(const char *endpoint, const char *soap_action, ns5__GetStockEntryVersionListRequest *ns5__getStockEntryVersionListRequest, ns5__GetStockEntryVersionListResponse *ns5__getStockEntryVersionListResponse)
{
	struct soap *soap = this;
	struct __ns11__getStockEntryVersionListRequest soap_tmp___ns11__getStockEntryVersionListRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "getStockEntryVersionListRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns11__getStockEntryVersionListRequest.ns5__getStockEntryVersionListRequest = ns5__getStockEntryVersionListRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns11__getStockEntryVersionListRequest(soap, &soap_tmp___ns11__getStockEntryVersionListRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__getStockEntryVersionListRequest(soap, &soap_tmp___ns11__getStockEntryVersionListRequest, "-ns11:getStockEntryVersionListRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__getStockEntryVersionListRequest(soap, &soap_tmp___ns11__getStockEntryVersionListRequest, "-ns11:getStockEntryVersionListRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!ns5__getStockEntryVersionListResponse)
		return soap_closesock(soap);
	ns5__getStockEntryVersionListResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__getStockEntryVersionListResponse->soap_get(soap, "ns5:getStockEntryVersionListResponse", "ns5:GetStockEntryVersionListResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::updateTransportMovementDetailsRequest(const char *endpoint, const char *soap_action, ns5__UpdateTransportMovementDetailsRequest *ns5__updateTransportMovementDetailsRequest, ns5__UpdateTransportMovementDetailsResponse *ns5__updateTransportMovementDetailsResponse)
{
	struct soap *soap = this;
	struct __ns11__updateTransportMovementDetailsRequest soap_tmp___ns11__updateTransportMovementDetailsRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "updateTransportMovementDetailsRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns11__updateTransportMovementDetailsRequest.ns5__updateTransportMovementDetailsRequest = ns5__updateTransportMovementDetailsRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns11__updateTransportMovementDetailsRequest(soap, &soap_tmp___ns11__updateTransportMovementDetailsRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__updateTransportMovementDetailsRequest(soap, &soap_tmp___ns11__updateTransportMovementDetailsRequest, "-ns11:updateTransportMovementDetailsRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__updateTransportMovementDetailsRequest(soap, &soap_tmp___ns11__updateTransportMovementDetailsRequest, "-ns11:updateTransportMovementDetailsRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!ns5__updateTransportMovementDetailsResponse)
		return soap_closesock(soap);
	ns5__updateTransportMovementDetailsResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__updateTransportMovementDetailsResponse->soap_get(soap, "ns5:updateTransportMovementDetailsResponse", "ns5:UpdateTransportMovementDetailsResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::updateVeterinaryEventsRequest(const char *endpoint, const char *soap_action, ns5__UpdateVeterinaryEventsRequest *ns5__updateVeterinaryEventsRequest, ns5__UpdateVeterinaryEventsResponse *ns5__updateVeterinaryEventsResponse)
{
	struct soap *soap = this;
	struct __ns11__updateVeterinaryEventsRequest soap_tmp___ns11__updateVeterinaryEventsRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "updateVeterinaryEventsRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns11__updateVeterinaryEventsRequest.ns5__updateVeterinaryEventsRequest = ns5__updateVeterinaryEventsRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns11__updateVeterinaryEventsRequest(soap, &soap_tmp___ns11__updateVeterinaryEventsRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__updateVeterinaryEventsRequest(soap, &soap_tmp___ns11__updateVeterinaryEventsRequest, "-ns11:updateVeterinaryEventsRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__updateVeterinaryEventsRequest(soap, &soap_tmp___ns11__updateVeterinaryEventsRequest, "-ns11:updateVeterinaryEventsRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!ns5__updateVeterinaryEventsResponse)
		return soap_closesock(soap);
	ns5__updateVeterinaryEventsResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__updateVeterinaryEventsResponse->soap_get(soap, "ns5:updateVeterinaryEventsResponse", "ns5:UpdateVeterinaryEventsResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::checkShipmentRegionalizationRequest(const char *endpoint, const char *soap_action, ns5__CheckShipmentRegionalizationRequest *ns5__checkShipmentRegionalizationRequest, ns5__CheckShipmentRegionalizationResponse *ns5__checkShipmentRegionalizationResponse)
{
	struct soap *soap = this;
	struct __ns11__checkShipmentRegionalizationRequest soap_tmp___ns11__checkShipmentRegionalizationRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "checkShipmentRegionalizationRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns11__checkShipmentRegionalizationRequest.ns5__checkShipmentRegionalizationRequest = ns5__checkShipmentRegionalizationRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns11__checkShipmentRegionalizationRequest(soap, &soap_tmp___ns11__checkShipmentRegionalizationRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__checkShipmentRegionalizationRequest(soap, &soap_tmp___ns11__checkShipmentRegionalizationRequest, "-ns11:checkShipmentRegionalizationRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__checkShipmentRegionalizationRequest(soap, &soap_tmp___ns11__checkShipmentRegionalizationRequest, "-ns11:checkShipmentRegionalizationRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!ns5__checkShipmentRegionalizationResponse)
		return soap_closesock(soap);
	ns5__checkShipmentRegionalizationResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__checkShipmentRegionalizationResponse->soap_get(soap, "ns5:checkShipmentRegionalizationResponse", "ns5:CheckShipmentRegionalizationResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::addBusinessEntityUserRequest(const char *endpoint, const char *soap_action, ns5__AddBusinessEntityUserRequest *ns5__addBusinessEntityUserRequest, ns5__AddBusinessEntityUserResponse *ns5__addBusinessEntityUserResponse)
{
	struct soap *soap = this;
	struct __ns11__addBusinessEntityUserRequest soap_tmp___ns11__addBusinessEntityUserRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "addBusinessEntityUserRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns11__addBusinessEntityUserRequest.ns5__addBusinessEntityUserRequest = ns5__addBusinessEntityUserRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns11__addBusinessEntityUserRequest(soap, &soap_tmp___ns11__addBusinessEntityUserRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__addBusinessEntityUserRequest(soap, &soap_tmp___ns11__addBusinessEntityUserRequest, "-ns11:addBusinessEntityUserRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__addBusinessEntityUserRequest(soap, &soap_tmp___ns11__addBusinessEntityUserRequest, "-ns11:addBusinessEntityUserRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!ns5__addBusinessEntityUserResponse)
		return soap_closesock(soap);
	ns5__addBusinessEntityUserResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__addBusinessEntityUserResponse->soap_get(soap, "ns5:addBusinessEntityUserResponse", "ns5:AddBusinessEntityUserResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::getBusinessEntityUserListRequest(const char *endpoint, const char *soap_action, ns5__GetBusinessEntityUserListRequest *ns5__getBusinessEntityUserListRequest, ns5__GetBusinessEntityUserListResponse *ns5__getBusinessEntityUserListResponse)
{
	struct soap *soap = this;
	struct __ns11__getBusinessEntityUserListRequest soap_tmp___ns11__getBusinessEntityUserListRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "getBusinessEntityUserListRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns11__getBusinessEntityUserListRequest.ns5__getBusinessEntityUserListRequest = ns5__getBusinessEntityUserListRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns11__getBusinessEntityUserListRequest(soap, &soap_tmp___ns11__getBusinessEntityUserListRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__getBusinessEntityUserListRequest(soap, &soap_tmp___ns11__getBusinessEntityUserListRequest, "-ns11:getBusinessEntityUserListRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__getBusinessEntityUserListRequest(soap, &soap_tmp___ns11__getBusinessEntityUserListRequest, "-ns11:getBusinessEntityUserListRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!ns5__getBusinessEntityUserListResponse)
		return soap_closesock(soap);
	ns5__getBusinessEntityUserListResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__getBusinessEntityUserListResponse->soap_get(soap, "ns5:getBusinessEntityUserListResponse", "ns5:GetBusinessEntityUserListResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::getBusinessEntityUserRequest(const char *endpoint, const char *soap_action, ns5__GetBusinessEntityUserRequest *ns5__getBusinessEntityUserRequest, ns5__GetBusinessEntityUserResponse *ns5__getBusinessEntityUserResponse)
{
	struct soap *soap = this;
	struct __ns11__getBusinessEntityUserRequest soap_tmp___ns11__getBusinessEntityUserRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "getBusinessEntityUserRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns11__getBusinessEntityUserRequest.ns5__getBusinessEntityUserRequest = ns5__getBusinessEntityUserRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns11__getBusinessEntityUserRequest(soap, &soap_tmp___ns11__getBusinessEntityUserRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__getBusinessEntityUserRequest(soap, &soap_tmp___ns11__getBusinessEntityUserRequest, "-ns11:getBusinessEntityUserRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__getBusinessEntityUserRequest(soap, &soap_tmp___ns11__getBusinessEntityUserRequest, "-ns11:getBusinessEntityUserRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!ns5__getBusinessEntityUserResponse)
		return soap_closesock(soap);
	ns5__getBusinessEntityUserResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__getBusinessEntityUserResponse->soap_get(soap, "ns5:getBusinessEntityUserResponse", "ns5:GetBusinessEntityUserResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::updateUserAuthoritiesRequest(const char *endpoint, const char *soap_action, ns5__UpdateUserAuthoritiesRequest *ns5__updateUserAuthoritiesRequest, ns5__UpdateUserAuthoritiesResponse *ns5__updateUserAuthoritiesResponse)
{
	struct soap *soap = this;
	struct __ns11__updateUserAuthoritiesRequest soap_tmp___ns11__updateUserAuthoritiesRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "updateUserAuthoritiesRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns11__updateUserAuthoritiesRequest.ns5__updateUserAuthoritiesRequest = ns5__updateUserAuthoritiesRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns11__updateUserAuthoritiesRequest(soap, &soap_tmp___ns11__updateUserAuthoritiesRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__updateUserAuthoritiesRequest(soap, &soap_tmp___ns11__updateUserAuthoritiesRequest, "-ns11:updateUserAuthoritiesRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__updateUserAuthoritiesRequest(soap, &soap_tmp___ns11__updateUserAuthoritiesRequest, "-ns11:updateUserAuthoritiesRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!ns5__updateUserAuthoritiesResponse)
		return soap_closesock(soap);
	ns5__updateUserAuthoritiesResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__updateUserAuthoritiesResponse->soap_get(soap, "ns5:updateUserAuthoritiesResponse", "ns5:UpdateUserAuthoritiesResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::updateUserWorkingAreasRequest(const char *endpoint, const char *soap_action, ns5__UpdateUserWorkingAreasRequest *ns5__updateUserWorkingAreasRequest, ns5__UpdateUserWorkingAreasResponse *ns5__updateUserWorkingAreasResponse)
{
	struct soap *soap = this;
	struct __ns11__updateUserWorkingAreasRequest soap_tmp___ns11__updateUserWorkingAreasRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "updateUserWorkingAreasRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns11__updateUserWorkingAreasRequest.ns5__updateUserWorkingAreasRequest = ns5__updateUserWorkingAreasRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns11__updateUserWorkingAreasRequest(soap, &soap_tmp___ns11__updateUserWorkingAreasRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__updateUserWorkingAreasRequest(soap, &soap_tmp___ns11__updateUserWorkingAreasRequest, "-ns11:updateUserWorkingAreasRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__updateUserWorkingAreasRequest(soap, &soap_tmp___ns11__updateUserWorkingAreasRequest, "-ns11:updateUserWorkingAreasRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!ns5__updateUserWorkingAreasResponse)
		return soap_closesock(soap);
	ns5__updateUserWorkingAreasResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__updateUserWorkingAreasResponse->soap_get(soap, "ns5:updateUserWorkingAreasResponse", "ns5:UpdateUserWorkingAreasResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::unbindBusinessEntityUserRequest(const char *endpoint, const char *soap_action, ns5__UnbindBusinessEntityUserRequest *ns5__unbindBusinessEntityUserRequest, ns5__UnbindBusinessEntityUserResponse *ns5__unbindBusinessEntityUserResponse)
{
	struct soap *soap = this;
	struct __ns11__unbindBusinessEntityUserRequest soap_tmp___ns11__unbindBusinessEntityUserRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "unbindBusinessEntityUserRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns11__unbindBusinessEntityUserRequest.ns5__unbindBusinessEntityUserRequest = ns5__unbindBusinessEntityUserRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns11__unbindBusinessEntityUserRequest(soap, &soap_tmp___ns11__unbindBusinessEntityUserRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__unbindBusinessEntityUserRequest(soap, &soap_tmp___ns11__unbindBusinessEntityUserRequest, "-ns11:unbindBusinessEntityUserRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__unbindBusinessEntityUserRequest(soap, &soap_tmp___ns11__unbindBusinessEntityUserRequest, "-ns11:unbindBusinessEntityUserRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!ns5__unbindBusinessEntityUserResponse)
		return soap_closesock(soap);
	ns5__unbindBusinessEntityUserResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__unbindBusinessEntityUserResponse->soap_get(soap, "ns5:unbindBusinessEntityUserResponse", "ns5:UnbindBusinessEntityUserResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int AMSMercuryG2BBindingProxy::getAppliedUserAuthorityListRequest(const char *endpoint, const char *soap_action, ns5__GetAppliedUserAuthorityListRequest *ns5__getAppliedUserAuthorityListRequest, ns5__GetAppliedUserAuthorityListResponse *ns5__getAppliedUserAuthorityListResponse)
{
	struct soap *soap = this;
	struct __ns11__getAppliedUserAuthorityListRequest soap_tmp___ns11__getAppliedUserAuthorityListRequest;
	if(endpoint)
		soap_endpoint = endpoint;
	SETIFZ(soap_action, "getAppliedUserAuthorityListRequest");
	soap->encodingStyle = NULL;
	soap_tmp___ns11__getAppliedUserAuthorityListRequest.ns5__getAppliedUserAuthorityListRequest = ns5__getAppliedUserAuthorityListRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns11__getAppliedUserAuthorityListRequest(soap, &soap_tmp___ns11__getAppliedUserAuthorityListRequest);
	if(soap_begin_count(soap))
		return soap->error;
	if(soap->mode & SOAP_IO_LENGTH) {
		if(soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__getAppliedUserAuthorityListRequest(soap, &soap_tmp___ns11__getAppliedUserAuthorityListRequest, "-ns11:getAppliedUserAuthorityListRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if(soap_end_count(soap))
		return soap->error;
	if(soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__getAppliedUserAuthorityListRequest(soap, &soap_tmp___ns11__getAppliedUserAuthorityListRequest, "-ns11:getAppliedUserAuthorityListRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if(!ns5__getAppliedUserAuthorityListResponse)
		return soap_closesock(soap);
	ns5__getAppliedUserAuthorityListResponse->soap_default(soap);
	if(soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__getAppliedUserAuthorityListResponse->soap_get(soap, "ns5:getAppliedUserAuthorityListResponse", "ns5:GetAppliedUserAuthorityListResponse");
	if(soap->error)
		return soap_recv_fault(soap, 0);
	if(soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
